package edu.uclm.esi.fakeaccountsbe.tests;// Generated by Selenium IDE

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.TestInstance.Lifecycle;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.api.TestMethodOrder;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

@TestInstance(Lifecycle.PER_CLASS)

@TestMethodOrder(OrderAnnotation.class)
public class ScrappingGuitarrasAmazon {

	private WebDriver driverA;
	JavascriptExecutor jsA;
	private WebDriverWait waitA;

	@BeforeAll
	public void setUp() {
		System.setProperty("webdriver.chrome.driver",
				"C:/Users/Msi/Downloads/chromedriver-win64/chromedriver-win64/chromedriver.exe");
		ChromeOptions options = new ChromeOptions();
		options.setBinary("C:/Users/Msi/Downloads/chrome-win64/chrome-win64/chrome.exe");
		options.addArguments("--remote-allow-origins=*");
		options.addArguments("--no-sandbox");
		options.addArguments("--disable-dev-shm-usage");

		driverA = new ChromeDriver(options);
		this.waitA = new WebDriverWait(driverA, Duration.ofSeconds(3));
		jsA = (JavascriptExecutor) driverA;


		driverA.get("www.amazon.es");

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();

		int screenWidth = (int) screenSize.getWidth();
		int screenHeight = (int) screenSize.getHeight();

		driverA.manage().window().setPosition(new Point(0, 0));
		driverA.manage().window().setSize(new Dimension(screenWidth / 2, screenHeight));
	}

	@AfterAll
	public void tearDown() {
		driverA.quit();
	}

	@Test
	@Order(0)
	public void testGuitarras() {
		WebElement btnCookies = this.waitA.until(ExpectedConditions.visibilityOfElementLocated(By.id("sp-cc-accept")));
		btnCookies.click();
		
		WebElement cajaBusqueda = waitA.until(ExpectedConditions.visibilityOfElementLocated(By.id("twotabsearchtextbox")));
		cajaBusqueda.sendKeys("Guitarra electrica");
		btnCookies = driverA.findElement(By.id("nav-search-submit-button"));
		btnCookies.click();
		
		List<WebElement> guitarras = this.driverA.findElements(By.className("a-size-base-plus a-color-base a-text-normal"));
		guitarras.forEach(nombre -> System.out.println(nombre.getText()));
	}

}
