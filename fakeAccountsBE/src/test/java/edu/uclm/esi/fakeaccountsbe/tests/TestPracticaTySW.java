package edu.uclm.esi.fakeaccountsbe.tests;// Generated by Selenium IDE

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.Duration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.management.MXBean;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.TestInstance.Lifecycle;
import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.api.TestMethodOrder;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.springframework.beans.factory.annotation.Autowired;

@TestInstance(Lifecycle.PER_CLASS)

@TestMethodOrder(OrderAnnotation.class)
public class TestPracticaTySW {

	private WebDriver driverPepe, driverAna;
	private Map<String, Object> vars;
	private JavascriptExecutor jsA, jsB;
	private WebDriverWait waitPepe, waitAna;

	@BeforeAll
	public void setUp() {
		System.setProperty("webdriver.chrome.driver",
				"C:/Users/Msi/Downloads/chromedriver-win64/chromedriver-win64/chromedriver.exe");
		ChromeOptions options = new ChromeOptions();
		options.setBinary("C:/Users/Msi/Downloads/chrome-win64/chrome-win64/chrome.exe");
		options.addArguments("--remote-allow-origins=*");
		options.addArguments("--no-sandbox");
		options.addArguments("--disable-dev-shm-usage");
		options.addArguments("--ignore-certificate-errors");
		options.addArguments("--disable-popup-blocking");
		options.addArguments("--disable-extensions");

		driverPepe = new ChromeDriver(options);
		this.waitPepe = new WebDriverWait(driverPepe, Duration.ofSeconds(10));
		jsA = (JavascriptExecutor) driverPepe;

		vars = new HashMap<String, Object>();

		driverAna = new ChromeDriver(options);
		this.waitAna = new WebDriverWait(driverAna, Duration.ofSeconds(10));
		jsB = (JavascriptExecutor) driverAna;

		driverPepe.get("https://localhost:4200");
		driverAna.get("https://localhost:4200");

		java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();

		int screenWidth = (int) screenSize.getWidth();
		int screenHeight = (int) screenSize.getHeight();

		driverPepe.manage().window().setPosition(new Point(0, 0));
		driverPepe.manage().window().setSize(new Dimension(screenWidth / 2, screenHeight));

		driverAna.manage().window().setPosition(new Point(screenWidth / 2 + 1, 0));
		driverAna.manage().window().setSize(new Dimension(screenWidth / 2, screenHeight));
	}

	@AfterAll
	public void tearDown() {
		driverPepe.quit();
		driverAna.quit();
	}

	@Test
	@Order(1)
	public void registroPepe() {
		registrar(this.driverPepe, this.waitPepe, "pepetysw@gmail.com", "Pepe1.TySW.Pe$", "Pepe1.TySW.Pe$");
	}

	@Test
	@Order(2)
	public void confirmarPepe() {
		confirmarCuenta(this.driverPepe, this.waitPepe, "pepetysw@gmail.com", "Pepe.TySW.Pe$");

	}

	@Test
	@Order(3)
	public void loginPepe() {
		login(this.driverPepe, this.waitPepe, "pepetysw@gmail.com", "Pepe1.TySW.Pe$");
	}

	@Test
	@Order(4)
	public void crearListaPepe() {
		crearLista(this.driverPepe, this.waitPepe);
	}

	@Test
	@Order(5)
	public void cargarListaPepe() {
		cargarLista(this.driverPepe, this.waitPepe);
	}

	@Test
	@Order(6)
	public void registroAna() {
		registrar(this.driverAna, this.waitAna, "anatysw33@gmail.com", "Ana1.TySW.An$", "Ana1.TySW.An$");
	}

	@Test
	@Order(7)
	public void confirmarAna() {
		confirmarCuenta(this.driverAna, this.waitAna, "anatysw33@gmail.com", "Ana.TySW.An$");
	}

	@Test
	@Order(8)
	public void loginAna() {
		login(this.driverAna, this.waitAna, "anatysw33@gmail.com", "Ana1.TySW.An$");
	}

	@Test
	@Order(9)
	public void invitarAna() {
		String mensaje = invitar(this.driverPepe, this.waitPepe, "anatysw33@gmail.com");
		aceptarInvitacion(this.driverAna, this.waitAna, mensaje);
	}

	@Test
	@Order(10)
	public void accederListaAna() {
		accederLista(this.driverAna, this.waitAna);
	}

	@Test
	@Order(11)
	public void accederListaPepe() {
		accederListaPepe(this.driverPepe, this.waitPepe);
	}

	@Test
	@Order(12)
	public void comprarTarta() {
		comprarTarta(this.driverAna, this.waitAna, "1");
	}

	@Test
	@Order(13)
	public void compraCorrecta() {
		WebElement cajaCompra = waitPepe.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/app-root/div/app-detalle-lista/div[2]/ul/li[3]/td[1]/input[3]")));
		jsA.executeScript("arguments[0].scrollIntoView(true);", cajaCompra);
		assertEquals("1", cajaCompra.getAttribute("value"));
	}

	private void registrar(WebDriver driver, WebDriverWait wait, String email, String pwd1, String pwd2) {
		WebElement menu = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/app-root/div/nav/div")));
		menu.click();
		WebElement we = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/app-root/div/nav/ul/a[3]")));
		we.click();

		WebElement cajaEmail = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-registar1/div/div/input[1]")));
		WebElement cajaPassword = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-registar1/div/div/input[2]")));
		WebElement cajaPassword2 = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-registar1/div/div/input[3]")));
		WebElement botonRegistrar = wait.until(ExpectedConditions.visibilityOfElementLocated(By.tagName("button")));

		cajaEmail.sendKeys(email);
		cajaPassword.sendKeys(pwd1);
		cajaPassword2.sendKeys(pwd2);
		botonRegistrar.click();
	}

	private void login(WebDriver driver, WebDriverWait wait, String email, String pwd) {
		driver.navigate().to("https://localhost:4200/");
		WebElement menu = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/app-root/div/nav/div")));
		menu.click();
		WebElement we = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("/html/body/app-root/div/nav/ul/a[1]")));
		we.click();

		WebElement cajaEmail = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-login/div/form/input[1]")));
		WebElement cajaPassword = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-login/div/form/input[2]")));
		WebElement boton = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-login/div/form/span/button[1]")));

		cajaEmail.sendKeys(email);
		cajaPassword.sendKeys(pwd);
		boton.click();
	}

	public void confirmarCuenta(WebDriver driver, WebDriverWait wait, String email, String pwd) {
		driver.navigate().to(
				"https://accounts.google.com/v3/signin/identifier?continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&ifkv=AeZLP99Xoj7_7UEx2ziht6ovGiRggdJeqUf6TBSDVHrChp5bzxlRJpriLBh-saY9Rdh8awmX7dAGGg&rip=1&sacu=1&service=mail&flowName=GlifWebSignIn&flowEntry=ServiceLogin&dsh=S389247532%3A1735298920435309&ddm=1");

		WebElement cajaEmail = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("identifierId")));
		cajaEmail.sendKeys(email);
		WebElement boton = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/div[1]/div[1]/div[2]/c-wiz/div/div[3]/div/div[1]/div/div/button/span")));
		boton.click();

		WebElement cajaPassword = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("Passwd")));
		cajaPassword.sendKeys(pwd);
		boton = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/div[1]/div[1]/div[2]/c-wiz/div/div[3]/div/div[1]/div/div/button")));
		boton.click();

		WebElement emailRecibido = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(":2a")));
		emailRecibido.click();
		WebElement link = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
				"/html/body/div[6]/div[3]/div/div[2]/div[2]/div/div/div/div[2]/div/div[1]/div/div[2]/div/div[2]/div[2]/div/div[3]/div/div/div/div/div/div[1]/div[2]/div[3]/div[3]/div/div[1]/p[3]/a")));
		link.click();

		String originalWindow = driver.getWindowHandle();
		Set<String> allWindows = driver.getWindowHandles();
		for (String windowHandle : allWindows) {
			if (!windowHandle.equals(originalWindow)) {
				driver.switchTo().window(windowHandle);
				break;
			}
		}

		System.out.println("Nueva URL: " + driver.getCurrentUrl());

		driver.close();
		driver.switchTo().window(originalWindow);
	}

	public void crearLista(WebDriver driver, WebDriverWait wait) {
		WebElement cajaNombre = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-gestor-listas/div/input")));
		WebElement boton = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-gestor-listas/div/button")));

		cajaNombre.sendKeys("Cumplea√±os");
		boton.click();
	}

	public void cargarLista(WebDriver driver, WebDriverWait wait) {
		WebElement btnProducto = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/app-root/div/app-gestor-listas/div/div/table/tbody/tr/td[3]/div/button[1]")));
		btnProducto.click();
		WebElement cajaProducto = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-detalle-lista/div[1]/input[1]")));
		WebElement cajaCantidad = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-detalle-lista/div[1]/input[2]")));
		WebElement btnA√±adirProducto = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-detalle-lista/div[1]/button")));

		cajaCantidad.clear();
		// Cerveza
		cajaProducto.sendKeys("Cerveza");
		cajaCantidad.sendKeys("30");
		btnA√±adirProducto.click();

		cajaProducto.clear();
		cajaCantidad.clear();
		// Tarta
		cajaProducto.sendKeys("Tarta");
		cajaCantidad.sendKeys("1");
		btnA√±adirProducto.click();

		cajaProducto.clear();
		cajaCantidad.clear();
		// Patatas fritas
		cajaProducto.sendKeys("Patatas fritas");
		cajaCantidad.sendKeys("2");
		btnA√±adirProducto.click();

	}

	public String invitar(WebDriver driver, WebDriverWait wait, String email) {
		driver.navigate().back();
		WebElement btnUsuarios = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/app-root/div/app-gestor-listas/div/div/table/tbody/tr/td[3]/div/button[4]")));
		btnUsuarios.click();
		WebElement cajaEmail = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-invitaciones/div/form/input[1]")));
		WebElement btnInvitar = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-invitaciones/div/form/button[1]")));
		cajaEmail.sendKeys(email);
		btnInvitar.click();
		WebElement mensaje = wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath("/html/body/app-root/div/app-invitaciones/div/form/div/a")));
		return mensaje.getText();

	}

	public void aceptarInvitacion(WebDriver driver, WebDriverWait wait, String url) {
		driver.navigate().to(url);

	}

	public void accederLista(WebDriver driver, WebDriverWait wait) {
		WebElement btnAcceder = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/app-root/div/app-gestor-listas/div/div/table/tbody/tr/td[3]/div/button[3]")));
		btnAcceder.click();
	}

	public void accederListaPepe(WebDriver driver, WebDriverWait wait) {
		driver.navigate().back();
		WebElement btnAcceder = wait.until(ExpectedConditions.visibilityOfElementLocated(
				By.xpath("/html/body/app-root/div/app-gestor-listas/div/div/table/tbody/tr/td[3]/div/button[3]")));
		btnAcceder.click();
	}

	public void comprarTarta(WebDriver driver, WebDriverWait wait, String cantidad) {
		try {
			WebElement cajaCantidad = wait.until(ExpectedConditions.visibilityOfElementLocated(
					By.xpath("/html/body/app-root/div/app-detalle-lista/div[2]/ul/li[3]/td[1]/input[3]")));

			((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", cajaCantidad);
			WebElement btnComprar = wait.until(ExpectedConditions.visibilityOfElementLocated(
					By.xpath("/html/body/app-root/div/app-detalle-lista/div[2]/ul/li[3]/td[2]/button[1]")));
			cajaCantidad.clear();
			cajaCantidad.sendKeys(cantidad);
			btnComprar.click();
			Thread.sleep(10000);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}